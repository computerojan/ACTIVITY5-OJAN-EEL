#include <stdio.h>
#include <string.h>

#define MAX_EMPLOYEES 100

// Define a structure to hold employee information
struct Employee {
    int id;
    char name[50];
    char department[50];
};

// Function to display employees in a specific department
void displayEmployeesByDepartment(struct Employee employees[], int count, char department[]) {
    int found = 0;
    printf("\nEmployees in department %s:\n", department);
    for (int i = 0; i < count; i++) {
        if (strcmp(employees[i].department, department) == 0) {
            printf("ID: %d, Name: %s\n", employees[i].id, employees[i].name);
            found = 1;
        }
    }
    if (!found) {
        printf("No employees found in %s department\n", department);
    }
}

int main() {
    struct Employee employees[MAX_EMPLOYEES];
    int count, i,choice;
    char departments[200];  // String to store multiple departments separated by commas
    char department[50];    // To store each department individually
    char *token;
    do{
     printf("\n1. ADD EMPLOYEE\n"
            "2. DISPLAY EMPLOYEE\n");
     printf("Enter your choice: \n");
     scanf("%d",&choice);
switch (choice) {
case 1: // Add a book
    // Input number of employees, re-prompt if input is zero or less
    do {
        printf("Enter number of employees: ");
        scanf("%d", &count);
        if (count <= 0) {
            printf("Invalid input. Number of employees must be greater than 0.\n");
        }
    } while (count <= 0);

    // Input employee details
    for (i = 0; i < count; i++) {
        printf("Enter details for employee %d\n", i + 1);
        printf("ID: ");
        scanf("%d", &employees[i].id);
        printf("Name: ");
        scanf(" %[^\n]", employees[i].name); // Using ' %[^\n]' to read string with spaces
        printf("Department: ");
        scanf(" %[^\n]", employees[i].department);
    }
     break;
     case 2: //diaplay employee
    // Input multiple departments separated by commas
    printf("\nEnter departments to display employees (separate by commas): ");
    scanf(" %[^\n]", departments);

    // Split the departments string by commas and search for employees in each department
    token = strtok(departments, ",");
    while (token != NULL) {
        // Trim leading and trailing spaces
        sscanf(token, " %[^\n]", department);
        displayEmployeesByDepartment(employees, count, department);
        token = strtok(NULL, ",");
    }
    break;
}
}while(choice==1||choice==2);
    return 0;
}

